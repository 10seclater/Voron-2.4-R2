[include mainsail.cfg]

# host MCU service is preinstalled and ready to use with:
[mcu CB2]
serial: /tmp/klipper_host_mcu

#############################################################################
# This file contains common pin mappings for the BIGTREETECH Manta M8P V2.0 
# KAMP +SENSORLESS HOMING + SHELL COMMAND FOR INPUT SHAPING#
#############################################################################
# To use this config, the firmware should be compiled for the
# STM32H723 with a "128KiB bootloader" "25 MHz crystal"
# and "USB (on PA11/PA12)", "CAN bus (on PD0/PD1)" or Serial (on USART1 PA10/PA9).

# See docs/Config_Reference.md for a description of parameters.
#[include shell_command.cfg]
#[include sensorless.cfg]
[include mainsail.cfg]
[include stealthburner_leds.cfg]
#[include nozzle_clean.cfg]
#[include led_progress.cfg]
#[include ./KAMP/Adaptive_Meshing.cfg]
#[include ./KAMP/Line_Purge.cfg]
#[include ./KAMP/Voron_Purge.cfg]

[exclude_object]

[force_move]
enable_force_move: true

#####################################################################
#   UUID Setting
#####################################################################
[mcu]
canbus_uuid: 8ccff55dd731 	#YOURS WILL BE DIFFERENT - CHANGE IT  TO MATCH

[mcu EBBCan]
canbus_uuid: a5049239013a 	#YOURS WILL BE DIFFERENT - CHANGE IT  TO MATCH

[printer]
kinematics: corexy
max_velocity: 400  
max_accel: 8500	    #Max 4000			
max_z_velocity: 15 		#Max 15 for 12V TMC Drivers, can increase for 24V	
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
# 	X/Y Stepper Settings
#####################################################################

## X Stepper on Motor1(B Motor rear left)
[stepper_x]
step_pin: PE6
dir_pin: PE5
enable_pin: !PC14
microsteps: 64
rotation_distance: 40
#endstop_pin: tmc2209_stepper_x:virtual_endstop
homing_positive_dir: true
endstop_pin: EBBCan: PB6
position_min: 0
position_endstop: 350
position_max: 350
homing_speed: 100   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC13
interpolate: False
run_current: .800
sense_resistor: 0.110
stealthchop_threshold: 0

driver_SGTHRS: 255
diag_pin: ^PF4 # use the same pin that was previously the endstop_pin!


## Y Stepper on Motor2 (A Motor rear right)
[stepper_y]
step_pin: PE2
dir_pin: PE1
enable_pin: !PE4
microsteps: 64

rotation_distance: 40
endstop_pin: PF3
position_min: 0
position_endstop: 350
position_max: 350
homing_speed: 100	#MAX 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PE3
interpolate: False
run_current: .800
sense_resistor: 0.110
stealthchop_threshold: 0

driver_SGTHRS: 255
diag_pin: ^PF3 # use the same pin that was previously the endstop_pin!


#####################################################################
# 	Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left on MOTOR3
[stepper_z]
step_pin: PB8
dir_pin: PB7
enable_pin: !PE0
microsteps: 64
rotation_distance: 40
gear_ratio: 80:16
endstop_pin: probe:z_virtual_endstop
position_max: 340
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

[tmc2209 stepper_z]
uart_pin: PB9
interpolate: True
run_current: .800
sense_resistor: 0.110
stealthchop_threshold: 999999

#[stepper_]##	Z1 Stepper - Rear Left on Motor4
[stepper_z1]
step_pin: PB4
dir_pin: !PB3
enable_pin: !PB6
microsteps: 64
rotation_distance: 40
gear_ratio: 80:16


[tmc2209 stepper_z1]
uart_pin: PB5
interpolate: True
run_current: .800
sense_resistor: 0.110
stealthchop_threshold: 999999

##	Z2 Stepper - Rear Right on Motor5
[stepper_z2]
step_pin: PG13
dir_pin: PG12
enable_pin: !PG15
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64

[tmc2209 stepper_z2]
uart_pin: PG14
interpolate: True
run_current: .800
sense_resistor: 0.110
stealthchop_threshold: 999999

##	Z3 Stepper - Front Right on Motor6
[stepper_z3]
step_pin: PG9
dir_pin: !PD7
enable_pin: !PG11
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64

[tmc2209 stepper_z3]
uart_pin: PG10
interpolate: True
run_current: .800
sense_resistor: 0.110
stealthchop_threshold: 999999

[safe_z_home]
home_xy_position: 175, 175
speed: 200
z_hop: 5
z_hop_speed: 5.0

[extruder]
step_pin: EBBCan: PD0
dir_pin: EBBCan: PD1
enable_pin: !EBBCan: PD2
microsteps: 32
rotation_distance: 22.978277 # standard Recommended voron start point
gear_ratio: 50:10
full_steps_per_rotation: 200
nozzle_diameter: 0.400
filament_diameter: 1.750
instantaneous_corner_velocity: 1.5
max_extrude_cross_section: .8
pwm_cycle_time: 0.02
smooth_time: 0.5
max_power: 0.8
heater_pin: EBBCan: PB13
Sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: EBBCan: PA3 #if you renamed your board make sure to match the board assignment in front of the pin
#spi_speed: 1000000
pressure_advance: 0.010
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 300
#min_extrude_temp: 0                                   ## use this for estep calbration only##
min_extrude_temp: 190                                ## enable this ones you have done extruder calibration steps and comment out the above line.
#max_extrude_cross_section: .8
max_extrude_only_distance: 101

[tmc2240 extruder]
cs_pin: EBBCan: PA15
spi_speed: 500000
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
interpolate: False
run_current: 0.600
rref: 12000
stealthchop_threshold: 999999
driver_IHOLDDELAY: 8
driver_IRUNDELAY: 2
driver_TBL: 3
driver_TOFF: 4
driver_HEND: 3
driver_HSTRT: 4
driver_TPFD: 0
driver_PWM_AUTOSCALE: True
driver_PWM_AUTOGRAD: True
driver_PWM_GRAD: 12
driver_PWM_OFS: 40
driver_PWM_REG: 15
driver_PWM_LIM: 12
driver_SGT: 30
driver_SEMIN: 2
driver_SEMAX: 8

[gcode_macro configure_extruder]
gcode:
  SET_TMC_FIELD STEPPER=extruder FIELD=pwm_meas_sd_enable VALUE=1
  SET_TMC_FIELD STEPPER=extruder FIELD=sg4_filt_en VALUE=1
  SET_TMC_FIELD STEPPER=extruder FIELD=freewheel VALUE=1
  SET_TMC_FIELD STEPPER=extruder FIELD=SG4_THRS VALUE=10
  SET_TMC_FIELD STEPPER=extruder FIELD=IHOLD VALUE=0
  SET_TMC_FIELD STEPPER=extruder FIELD=THIGH VELOCITY=50
  SET_TMC_FIELD STEPPER=extruder FIELD=TCOOLTHRS VALUE=4000
  SET_TMC_FIELD STEPPER=extruder FIELD=TPWMTHRS VELOCITY=1
  SET_TMC_FIELD STEPPER=extruder FIELD=OVERTEMPPREWARNING_VTH VALUE=2885 # 7.7 * 100 C + 2038
  {% set v = (24.7/0.009732)|int %}
  SET_TMC_FIELD STEPPER=extruder FIELD=OVERVOLTAGE_VTH VALUE={ v }

[delayed_gcode configure_extruder_startup]
initial_duration: 1
gcode:
        configure_extruder

[filament_switch_sensor filament_sensor]
switch_pin: PC15

[heater_bed]
heater_pin: PA0 #PF5
sensor_pin: PB1 
sensor_type: Generic 3950
max_power: 1.0
min_temp: 0
max_temp: 120
#Control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#[temperature_sensor buildplate]
#sensor_type: Generic 3950
#sensor_pin: PB0
#min_temp: -40
#max_temp: 120

#[temperature_sensor chamber]
#sensor_type: Generic 3950
#sensor_pin: PB0
#min_temp: 0
#max_temp: 120
#gcode_id: C

[temperature_sensor EBB_NTC]
sensor_type: Generic 3950
sensor_pin: EBBCan: PA2
min_temp: 0
max_temp: 120

[temperature_sensor CB2]
sensor_type: temperature_host

[probe]
pin: ^EBBCan: PB5
X_offset: 0
Y_offset: 0
#z_offset: 0
speed: 10.0
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.009
samples_tolerance_retries: 3

[quad_gantry_level]

gantry_corners:
	-60,-10
	410,420
points:
	40,35
	40,310
	310,310
	310,35
speed: 500
horizontal_move_z: 10
retries: 10
retry_tolerance: 0.0070
max_adjust: 15

[bed_mesh]

speed: 300
horizontal_move_z: 10
mesh_min: 10,10
mesh_max: 340,340
probe_count: 6,6
algorithm: bicubic
bicubic_tension: 0.2

##################################################################
#             TAP MACRO TO CHECK OVER 175DEGREES                  #
##################################################################

## THE BELOW CODE STOPS THE TAP HOMING INTO THE BED AT PROBE TEMPS OVER 150Â°C##
#activate_gcode:
#    {% set PROBE_TEMP = 175 %}
#    {% set MAX_TEMP = PROBE_TEMP + 5 %}
#    {% set ACTUAL_TEMP = printer.extruder.temperature %}
#    {% set TARGET_TEMP = printer.extruder.target %}

#    {% if TARGET_TEMP > PROBE_TEMP %}
#    { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
#    M109 S{ PROBE_TEMP }
#    {% else %}
#    Temperature target is already low enough, but nozzle may still be too hot.
#    {% if ACTUAL_TEMP > MAX_TEMP %}
#    { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
#    TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
#    {% endif %}
#    {% endif %}

[multi_pin controller_fans]
pins: PF6,PF9

[controller_fan controller_fan]
##  Controller fan
pin: multi_pin:controller_fans
max_power: 0.4
kick_start_time: 0.5
heater: heater_bed

[temperature_fan chamber]
pin: PF8
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 5.0
cycle_time:0.01
off_below:0.1
sensor_type: Generic 3950
sensor_pin: PB0
min_temp: 0
max_temp: 120
target_temp: 35.0
control: watermark
gcode_id: C

[heater_fan nevermore_fan]
#  Exhaust fan - Nevermore Filter
pin: PF7 #3rd from left below voltage jumpers
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 5.0
heater: heater_bed
heater_temp: 60
fan_speed: 1.0 

[heater_fan heatbreak_cooling_fan]
pin: EBBCan: PA0

[fan]
pin: EBBCan: PA1

[adxl345]
cs_pin: EBBCan: PB12
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
axes_map: z,-y,x
# to test follow these instructions - 
#  type SHAPER_CALIBRATE 	
# let run it s course and type  	SAVE_CONFIG
# YOU WILL NEEED TO SSH INTO DEVICE AND NAVIGATE TO /TMP FILE (IF YOU HAVE AN SB2209 IT WILL CREATE A FILE CALLED
# calibration_data_x_20231006_111358.csv - OR SOMETHING CLOSE TO THAT AND calibration_data_y_20231006_111358.csv
# FIND THESE AND CHANGE THE NAMES TO resonances_x_*.csv (* LEAVE YOUR NUMBERS THAT ARE THERE IN THIS FILE NAME AND DO SAME FOR Y AXIS
#  CONVERT TO A GRAPH PUT IN THESE COMMANDS:
# 		~/klipper/scripts/calibrate_shaper.py /tmp/resonances_x_*.csv -o /tmp/shaper_calibrate_x.png
#		~/klipper/scripts/calibrate_shaper.py /tmp/resonances_y_*.csv -o /tmp/shaper_calibrate_y.png
#	GO  TO THE TMP AND YOU WILL FIND 2 X PNG PICTURE FILES. SAVE TO YOUR PC AND YOU CAN THEN LOOK AT THE DATA IN GRAPH FORM
[resonance_tester]
probe_points: 175, 175, 20
accel_chip: adxl345

#################################################
################### Disco Led ###################
#################################################
[neopixel disco1]
pin: PD15
chain_count: 22
color_order: GRB
initial_RED: 1.0
initial_GREEN: 1.0
initial_BLUE: 1.0

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE7, EXP1_2=PG1,
    EXP1_3=PG0, EXP1_4=PF15,
    EXP1_5=PF14, EXP1_6=PF13,    # Slot in the socket on this side
    EXP1_7=PF12, EXP1_8=PF11,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PE13, EXP2_2=PE12,
    EXP2_3=PE15, EXP2_4=PE11,
    EXP2_5=PE10, EXP2_6=PE14,      # Slot in the socket on this side
    EXP2_7=PE8, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<NC>
##------------------------------------------------------------------------
# Enable object exclusion
[exclude_object]

# Enable arcs support
[gcode_arcs]
resolution: 0.3

#####################################################################
#   Macros
#####################################################################

#KNOMI#

#[gcode_macro BED_MESH_CALIBRATE]
#rename_existing: BED_MESH_CALIBRATE_BASE
#variable_probing:False

#gcode:
 # SET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probing VALUE=True
 # BED_MESH_CALIBRATE_BASE
 # SET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probing VALUE=False
 
#[gcode_macro G28]
#rename_existing: G0028
#variable_homing:False

#gcode:
#  SET_GCODE_VARIABLE MACRO=G28 VARIABLE=homing VALUE=True
 # G0028
 # SET_GCODE_VARIABLE MACRO=G28 VARIABLE=homing VALUE=False

#	REV 1.4 07-10-23 

# NEOPIXEL_DISPLAY LED="disco1" TYPE=bed_temp MODE=glow   just like this

##########################
#      SPEED BABY        #
##########################
# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

[gcode_macro TEST_SPEED]
gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                #G28 Z ### <--commented out
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28  ### <--changed from G28 XY
        G90  ### <--added to correct issue 66
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small patternbox
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED
######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro DISABLE_STEPPERS]
gcode:  
    M84

[gcode_macro CHANGE_FILAMENT]
gcode:
    G0 X100 Y0 Z100

[gcode_macro PARK]
gcode:
    {% set th = printer.toolhead %}
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30  

[gcode_macro G32]
gcode:
   SAVE_GCODE_STATE NAME=STATE_G32
   G90
   G28
   QUAD_GANTRY_LEVEL
   G28
   PARK
   RESTORE_GCODE_STATE NAME=STATE_G32


[gcode_macro INPUT_SHAPER_CALIBRATE]
gcode:
   SHAPER_CALIBRATE

# Enable object exclusion
[exclude_object]

# Enable arcs support
[gcode_arcs]
resolution: 0.3

[gcode_macro OFF]
gcode:
    M84                                  ; turn steppers off
    TURN_OFF_HEATERS                     ; turn bed / hotend off
    M107                                 ; turn print cooling fan off
    #SET_PIN PIN=nevermore VALUE=0        ; turn nevermore fan off     
    #SET_PIN PIN=neopixel disco1 VALUE=0       ; turn case light off
    #SET_PIN PIN=neopixel disco2 VALUE=0       ; turn case light off
    #SET_FAN_SPEED FAN=Exhaust SPEED=0   ; turn exhaust fan off
    #SET_FAN_SPEED FAN=BedFans SPEED=0   ; bed fan off
    #SET_PIN PIN=caselight VALUE=0       ; turn case light off

# [delayed_gcode setdiscosticks]
#initial_duration: 1
#gcode:
        #NEOPIXEL_DISPLAY LED="disco1" TYPE=extruder_temp MODE=glow
        #NEOPIXEL_DISPLAY LED="disco2" TYPE=bed_temp MODE=glow

################################################
###### STANDARD INPUT_SHAPER CALIBRATIONS ######
################################################
# Written by Frix_x#0161 #
# @version: 1.3

# CHANGELOG:
#   v1.3: added possibility to override the default parameters
#   v1.2: added EXCITATE_AXIS_AT_FREQ to hold a specific excitating frequency on an axis and diagnose mechanical problems
#   v1.1: added M400 to validate that the files are correctly saved to disk
#   v1.0: first version of the automatic input shaper workflow

# -------------------------------------------------------------------------------------------------------------------------
# If you want to use it into your own config, please install it as a standalone macro as described in the
# installation section of this file: docs > features > is_workflow.md
# -------------------------------------------------------------------------------------------------------------------------

### What is it ? ###
# This macro helps you to configure the input shaper algorithm of Klipper by running the tests sequencially and calling an automatic script
# that generate the graphs, manage the files and so on. It's basically a fully automatic input shaper calibration workflow.
# Results can be found in your config folder using FLuidd/Maisail file manager.

# The goal is to make it easy to set, share and use it.

# Usage:
#   1. Call the AXES_SHAPER_CALIBRATION macro, wait for it to end and compute the graphs. Then look for the results in the results folder.
#   2. Call the BELTS_SHAPER_CALIBRATION macro, wait for it to end and compute the graphs. Then look for the results in the results folder.
#   3. If you find out some strange noise, you can use the EXCITATE_AXIS_AT_FREQ macro to diagnose the origin


[gcode_macro AXES_SHAPER_CALIBRATION]
description: Run standard input shaper test for all axes
gcode:
    {% set verbose = params.VERBOSE|default(true) %}
    {% set min_freq = params.FREQ_START|default(5)|float %}
    {% set max_freq = params.FREQ_END|default(133.3)|float %}
    {% set hz_per_sec = params.HZ_PER_SEC|default(1)|float %}

    TEST_RESONANCES AXIS=X FREQ_START={min_freq} FREQ_END={max_freq} HZ_PER_SEC={hz_per_sec}
    M400
    TEST_RESONANCES AXIS=Y FREQ_START={min_freq} FREQ_END={max_freq} HZ_PER_SEC={hz_per_sec}
    M400

    {% if verbose %}
        RESPOND MSG="Graphs generation... Please wait a minute or two and look in the configured folder."
    {% endif %}
    RUN_SHELL_COMMAND CMD=plot_graph PARAMS=SHAPER


[gcode_macro BELTS_SHAPER_CALIBRATION]
description: Run custom demi-axe test to analyze belts on CoreXY printers
gcode:
    {% set verbose = params.VERBOSE|default(true) %}
    {% set min_freq = params.FREQ_START|default(5)|float %}
    {% set max_freq = params.FREQ_END|default(133.33)|float %}
    {% set hz_per_sec = params.HZ_PER_SEC|default(1)|float %}

    TEST_RESONANCES AXIS=1,1 OUTPUT=raw_data NAME=b FREQ_START={min_freq} FREQ_END={max_freq} HZ_PER_SEC={hz_per_sec}
    M400
    TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=a FREQ_START={min_freq} FREQ_END={max_freq} HZ_PER_SEC={hz_per_sec}
    M400

    {% if verbose %}
        RESPOND MSG="Graphs generation... Please wait a minute or two and look in the configured folder."
    {% endif %}
    RUN_SHELL_COMMAND CMD=plot_graph PARAMS=BELTS


[gcode_macro EXCITATE_AXIS_AT_FREQ]
description: Maintain a specified input shaper excitating frequency for some time to diagnose vibrations
gcode:
    {% set FREQUENCY = params.FREQUENCY|default(25)|int %}
    {% set TIME = params.TIME|default(10)|int %}
    {% set AXIS = params.AXIS|default("x")|string|lower %}

    TEST_RESONANCES OUTPUT=raw_data AXIS={AXIS} FREQ_START={FREQUENCY-1} FREQ_END={FREQUENCY+1} HZ_PER_SEC={1/(TIME/3)}
    M400

#####################################################################
#   print_start macro
#####################################################################

## *** THINGS TO UNCOMMENT: ***
## Bed mesh (2 lines at 2 locations)
## Z_TILT_ADJUST if your printer is a Trident
## Quad gantry level if your printer is a V2
## Nevermore - if you have one

#[gcode_shell_command plot_graph]
#command: bash /home/biqu/printer_data/config/scripts/plot_graphs.sh
#timeout: 500.0
#verbose: True

#[delayed_gcode setdiscosticks]
#initial_duration: 1
#gcode:
#        NEOPIXEL_DISPLAY LED="disco1" TYPE=extruder_temp MODE=glow
#        NEOPIXEL_DISPLAY LED="disco2" TYPE=bed_temp MODE=glow

[gcode_macro PRINT_START]

#YOU MUST ADD THES LINES TO super SLICER PRINT START COED IN THE PRTER SETTINGS SECTION OR NOT OF THIS WLL WORK - EACH LINE MUST BE UNCOMMENTED
#M104 S0 ; Stops PrusaSlicer from sending temp waits separately
#M140 S0
#print_start EXTRUDER=[first_layer_temperature[initial_extruder]] BED=[first_layer_bed_temperature]
gcode:


  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("40")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
  
  SET_DISPLAY_TEXT MSG="HOMING ALL"                # Displays info  
  STATUS_HOMING         # Sets SB-leds to homing-mode
  G28                   # Full home (XYZ)
  G90                   # Absolut position
 ##  Uncomment for bed mesh (1 of 2)
  #BED_MESH_CLEAR       # Clears old saved bed mesh (if any)
  SET_DISPLAY_TEXT MSG="CLEAR MESH"      # Displays info 
  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="BED HEAT: {target_bed}c"           # Displays info
    STATUS_HEATING                                      # Sets SB-leds to heating-mode
    M106 S255                                           # Turns on the PT-fan

    ##  Uncomment if you have a Nevermore.
    #SET_PIN PIN=nevermore VALUE=1                      # Turns on the nevermore

    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Displays info
    #TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp

  # If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    STATUS_HEATING                                      # Sets SB-leds to heating-mode
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Soak for 1min"                # Displays info
    G4 P6000                                          # Waits 5 min for the bedtemp to stabilize
  {% endif %}

  # Heating nozzle to 175 degrees. This helps with getting a correct Z-home
  SET_DISPLAY_TEXT MSG="TAPPITY TaP 175c"          # Displays info
  M109 S175                                    # Heats the nozzle to 175c
  
  ##  Uncomment for Trident (Z_TILT_ADJUST)
  #SET_DISPLAY_TEXT MSG="Z-tilt adjust"     # Displays info
  #STATUS_LEVELING                          # Sets SB-leds to leveling-mode
  #Z_TILT_ADJUST                            # Levels the buildplate via z_tilt_adjust
  #G28 Z                                    # Homes Z again after z_tilt_adjust

  ##  Uncomment for V2 (Quad gantry level AKA QGL)
  SET_DISPLAY_TEXT MSG="QGL"      # Displays info
  STATUS_LEVELING                 # Sets SB-leds to leveling-mode
  quad_gantry_level               # Levels the buildplate via QGL
  SET_DISPLAY_TEXT MSG="CALIBRATING Z"      # Displays info  
  status_calibrating_z  
  G28 Z                           # Homes Z again after QGL

  ##  Uncomment for Klicky auto-z
  #CALIBRATE_Z                                 # Calibrates Z-offset with klicky
  #SET_DISPLAY_TEXT MSG="Z-offset"             # Displays info
  #Bed Mesh
  BED_MESH_PROFILE LOAD="default" 
  ##  Uncomment for bed mesh (2 of 2)
  #SET_DISPLAY_TEXT MSG="BED MESHING"    # Displays info
  #STATUS_MESHING                     # Sets SB-leds to bed mesh-mode
  #bed_mesh_calibrate                 # Starts bed mesh



  # Heats up the nozzle up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"             # Displays info
  STATUS_HEATING                                                # Sets SB-leds to heating-mode
  G1 X{x_wait} Y{y_wait} Z15 F9000                              # Goes to center of the bed
  M107                                                          # Turns off partcooling fan
  M109 S{target_extruder}                                       # Heats the nozzle to printing temp
 SET_DISPLAY_TEXT MSG="RUBBA-SCRUB!"                # Displays info
  status_cleaning
  #CLEAN_NOZZLE
   
# Gets ready to print by doing a purge line and updating the SB-leds
  SET_DISPLAY_TEXT MSG="Printer goes brr"          # Displays info
  STATUS_PRINTING                                  # Sets SB-leds to printing-mode
  G0 X{x_wait - 50} Y4 F10000                      # Moves to starting point
  G0 Z0.4                                          # Raises Z to 0.4
  G91                                              # Incremental positioning 
  G1 X100 E20 F1000                                # Purge line
  G90                                              # Absolut position

##------------------------------------------------------------------------------------------##
################################ END PRINT ###################################################
##------------------------------------------------------------------------------------------##

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
     
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    #BED_MESH_CLEAR
    SET_DISPLAY_TEXT MSG="NEVERMORE SHUT DOWN"          # Displays info
    #SET_PIN PIN=nevermore VALUE=0                      # Turns OFF the nevermore
    SET_DISPLAY_TEXT MSG="JOB 100% COMPLETE"          # Displays info
    status_off
    OFF
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 59.421
#*# pid_ki = 3.119
#*# pid_kd = 282.994
#*#
#*# [input_shaper]
#*# shaper_type_x = zv
#*# shaper_freq_x = 57.8
#*# shaper_type_y = zv
#*# shaper_freq_y = 42.6
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.222524, 0.266899, 0.278774, 0.270649, 0.226274, 0.195649
#*# 	0.219399, 0.223149, 0.197524, 0.160024, 0.191274, 0.176274
#*# 	0.155649, 0.146274, 0.131274, 0.112524, 0.136899, 0.129399
#*# 	0.151899, 0.127524, 0.058149, 0.026899, 0.117524, 0.108149
#*# 	0.208774, 0.217524, 0.202524, 0.182524, 0.191274, 0.175024
#*# 	0.265024, 0.231899, 0.262524, 0.251899, 0.248774, 0.266274
#*# x_count = 6
#*# y_count = 6
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 10.0
#*# max_x = 340.0
#*# min_y = 10.0
#*# max_y = 340.0
#*#
#*# [probe]
#*# z_offset = -0.460
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 36.045
#*# pid_ki = 4.073
#*# pid_kd = 79.749
